<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="imgWizard.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAB
        2AAAAdgB+lymcgAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAQxSURBVHhe7dtb
        yI1ZHMfxd5RjGCNckAzNHRqnkENcKOJqTJPjhZlcOeZCIkWSU6TIONwYjRvlakZTM4OGFIkLzCiDlCs0
        YmLGoWHm+9O76t9q7dnPaa93P4/9q0/t93nf/Tzrv5/TWms/b1sHZQ2e4hIGakHK9MPPeITt6ILSpDf+
        wb/tdiFt1sO9Xy5jKEqRj2EbfxRpsw92HfIEcxHKGOzADdzBTETPJ5iBRbAN/xFaPgU9kCR7Yddh7UdX
        jMRW/A7/b24halbhLfyG+G6jD+plN0Lvd/4MLLN+Q9RcR6ghIbUOY5udCL03KV04o+YwQg3x/Y0kF7Nt
        CL0/qdGIms5YAl2IDsI2RkeHlm+Eztsk2QK7jjR0EezQ5L0LDIFue3YdaejCWGgmQrelBe9+qp8BsA06
        gKT5Ao9h35/WCBSW/ngOt/JZSJKT0N8/wwQtqJMPcRxuO1mp96lbZGEZBbuB1UiSD/Ap1KWtF/UP7sFu
        Jw/1EwpLJ7i9eRM6IorMcOjO4BeR1+coNH2hvVp0liJUQF7qNpdi7DAIDxAqIi/dSUoxitTRtQw/4RVC
        xWQVvUeYN7ob6HZ7AvX6+0n8gcKjw+orfAn1ABsVjRzzfgi/oPAcgdvAIS1oYHQk2IJ8V6FutqUJGI1N
        NKmS5DacOupruwZoeFtExmE+dArY6HSwBVvq9KjbHD2206LXeTMeum1pfeoT2A9Br2tdGBciSrpB43NN
        UsoLuEbotVuuw09/myaayvL7/joSbDSjZH8v3yJa1sFvQC1rkTR2zzv6eSxsdIu0f3MfHyFadFGxDfg/
        OlKSJLTndU6HBk7qJ7jOko44jR2iRr01ze+/gW2wpd9dRJLvANIU76L1LofGDh2ePBfBLMU3XbJ+AJUo
        XvkBroBTWpAglSleGYxj+Kb9db00unh1zdU71eTrSi1opsTY8xqXuHXry5lhaIrEOuyb8gOIec7rFNCg
        7BpWaEFHp1IXvLRpFY/3snhlDl7CFq8Bz3sVfXOkAUvMPa/vLjbgO3ymBY1OT2jKSQOkxVrgZTZi7vl5
        cEfda2jw1rBoovIs3AZ139XTIXmTpze3Ca49Mg0NiV+8U8SHkKczsxm2PdNReHTYn4fdkKVGh06HpEn7
        AezBX7Bt8OkZQ50euVOveEcTIlmTpjenSZHQ9kMeIleSFi9fI0Z0kdPFLtQG36/InFrnfMgF9EKs6Hb3
        PTQbfRe2LVeg5fpSJfMUWjMX76fwi2CZilf09JltU65Z47IVr0yGm7HWRU8Pa2dKGYt3mQQ9oq9H9DKl
        zMXnTqt4hIr1tYpHZdIqHqFifa3iUZm0ikeoWF/liu+OcwgV69PQV0PgSqXef2A5lSxesc/11VK5w95G
        c/Shop3K7nmXMwgVLpUvXpmK0ByaLoyVL95FsySnodNB/1eb5anOEqat7T9vsGrwUKosKAAAAABJRU5E
        rkJggg==
</value>
  </data>
</root>